/*
 * Copyright (C) 2014 Ernesto Corbellini
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

task wrapper(type: Wrapper) {
    gradleVersion = '2.14.1'
}

repositories {
  mavenLocal()
  mavenCentral()
}

buildscript {
  apply from: "https://github.com/CentralLabFacilities/rosjava_bootstrap/raw/kinetic/buildscript.gradle"
}

apply plugin: 'catkin'
apply plugin: 'java'
apply plugin: "ros-java"

allprojects {
    /*
      A github url provides a good standard unique name for your project
      Example below, but you may wish to switch to your own unique url.
    */
    group 'com.github.rosjava'
    version = project.catkin.pkg.version
}

dependencies {
    /* An external maven artifact dependency */

    compile 'org.ros.rosjava_core:rosjava:[0.3,0.4)'
    compile 'org.apache.directory.studio:org.apache.commons.logging:[1.1,1.2)'
    testCompile 'junit:junit:4.12'

    /* Example of a local subproject dependency */
    /* compile project(':sibling_gradle_project') */

    compile 'org.ros.rosjava_messages:actionlib_tutorials:[0.1,)'
}

/*
  Some useful tasks:

    install: deploys jar's to MavenLocal() (i.e. ~/.m2/repository)
    publishMavenJavaPublicationToMavenRepository : deploys jar's to devel/share/maven
    installApp : assembles java apps in the _subproject_/build directories.

  Note that these are dependent on the type of project (e.g. installApp is only valid for
  java binary subprojects, while publishMavenJav... is only added once a subproject is included.
  If you're using catkin_make, this is not important, since it will use the task list specified
  in CMakeLists.txt
*/
defaultTasks 'tasks'
